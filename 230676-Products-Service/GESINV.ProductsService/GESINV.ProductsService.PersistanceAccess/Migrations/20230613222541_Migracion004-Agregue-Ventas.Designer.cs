// <auto-generated />
using System;
using GESINV.ProductsService.PersistanceAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GESINV.ProductsService.PersistanceAccess.Migrations
{
    [DbContext(typeof(ProductsContext))]
    [Migration("20230613222541_Migracion004-Agregue-Ventas")]
    partial class Migracion004AgregueVentas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GESINV.ProductsService.Dominio.Compra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("CostoTotalEnPesos")
                        .HasColumnType("numeric");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ProveedorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.DetalleCompraProducto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<Guid>("CompraId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetallesComprasProductos");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.DetalleVentaProducto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VentaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaId");

                    b.ToTable("DetallesVentasProductos");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.Producto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Accesible")
                        .HasColumnType("boolean");

                    b.Property<int>("CantidadComprada")
                        .HasColumnType("integer");

                    b.Property<int>("CantidadEnInventarioInicial")
                        .HasColumnType("integer");

                    b.Property<int>("CantidadVendida")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImagenPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Nombre")
                        .IsUnique();

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.Proveedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Accesible")
                        .HasColumnType("boolean");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId", "Nombre")
                        .IsUnique();

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.Venta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("MontoTotalEnPesos")
                        .HasColumnType("numeric");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.Compra", b =>
                {
                    b.HasOne("GESINV.ProductsService.Dominio.Proveedor", "Proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.DetalleCompraProducto", b =>
                {
                    b.HasOne("GESINV.ProductsService.Dominio.Compra", "Compra")
                        .WithMany("DetallesComprasProductos")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GESINV.ProductsService.Dominio.Producto", "Producto")
                        .WithMany("DetallesComprasProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.DetalleVentaProducto", b =>
                {
                    b.HasOne("GESINV.ProductsService.Dominio.Producto", "Producto")
                        .WithMany("DetallesVentasProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GESINV.ProductsService.Dominio.Venta", "Venta")
                        .WithMany("DetallesVentasProductos")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.Compra", b =>
                {
                    b.Navigation("DetallesComprasProductos");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.Producto", b =>
                {
                    b.Navigation("DetallesComprasProductos");

                    b.Navigation("DetallesVentasProductos");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.Proveedor", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("GESINV.ProductsService.Dominio.Venta", b =>
                {
                    b.Navigation("DetallesVentasProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
