// <auto-generated />
using System;
using GESINV.SubscriptionsService.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GESINV.SubscriptionsService.DataAccess.Migrations
{
    [DbContext(typeof(SubscriptionsContext))]
    [Migration("20230616054135_Migracion002-Reice-el-Dominio")]
    partial class Migracion002ReiceelDominio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GESINV.SubscriptionsService.Dominio.CompraVentaSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("CompraVentaSubscriptions");
                });

            modelBuilder.Entity("GESINV.SubscriptionsService.Dominio.Producto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductoMainId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("GESINV.SubscriptionsService.Dominio.StockSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("StockSubscriptions");
                });

            modelBuilder.Entity("GESINV.SubscriptionsService.Dominio.CompraVentaSubscription", b =>
                {
                    b.HasOne("GESINV.SubscriptionsService.Dominio.Producto", "Producto")
                        .WithMany("CompraVentasSubscriptions")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("GESINV.SubscriptionsService.Dominio.StockSubscription", b =>
                {
                    b.HasOne("GESINV.SubscriptionsService.Dominio.Producto", "Producto")
                        .WithMany("StockSubscriptions")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("GESINV.SubscriptionsService.Dominio.Producto", b =>
                {
                    b.Navigation("CompraVentasSubscriptions");

                    b.Navigation("StockSubscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
